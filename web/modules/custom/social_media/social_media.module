<?php

use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Form\FormStateInterface;

function social_media_page_attachments(array &$page) {
  $page['#attached']['library'][] = 'social_media/custom_css';
}

/**
 * Implements hook_theme().
 */
function social_media_theme() {
  return [
    'social_media' => [
      'variables' => [
        'social_links' => [],
      ],
    ],
    'social_media_global' => [
      'variables' => [
        'social_links' => [],
      ],
    ],
  ];
}

function social_media_form_system_site_information_settings_alter(&$form, &$form_state) {
  $sites = $form_state->get('count');
  $social_fieldset = Drupal::config('social_media.settings')
    ->get('global_fieldset');
  $count_social_fieldset = count($social_fieldset);

  if ($sites === NULL) {
    if (empty($social_fieldset)) {
      $form_state->set('count', 1);
      $sites = $form_state->get('count');
    }
    else {
      $form_state->set('count', $count_social_fieldset);
      $sites = $form_state->get('count');
    }
  }

  $removed_fields = $form_state->get('removed_fields');
  if ($removed_fields === NULL) {
    $form_state->set('removed_fields', []);
    $removed_fields = $form_state->get('removed_fields');
  }

  $form['global_fieldset'] = [
    '#tree' => TRUE,
    '#type' => 'fieldset',
    '#title' => t('Sites'),
    '#prefix' => '<div id="names-fieldset-wrapper">',
    '#suffix' => '</div>',
  ];

  for ($site = 0; $site < $sites; $site++) {
    if (in_array($site, $removed_fields)) {
      continue;
    }

    $form['global_fieldset']['inputs'][$site] = [
      '#type' => 'fieldset',
      '#title' => t('Site ') . ' ' . ($site + 1),
    ];

    $form['global_fieldset']['inputs'][$site]['name'] = [
      '#type' => 'textfield',
      '#title' => t('Name'),
      '#required' => TRUE,
      '#default_value' => $social_fieldset[$site]['name'] ?? '',
    ];

    $form['global_fieldset']['inputs'][$site]['link'] = [
      '#type' => 'textfield',
      '#title' => t('Link'),
      '#required' => TRUE,
      '#element_validate' => ['social_media_validate_link_field'],
      '#default_value' => $social_fieldset[$site]['link'] ?? '',
    ];

    $form['global_fieldset']['inputs'][$site]['actions']['remove_site'] = [
      '#type' => 'submit',
      '#value' => t('Remove one'),
      '#submit' => ['social_media_remove_one_site'],
      '#limit_validation_errors' => [],
      '#name' => "remove_$site",
      '#ajax' => [
        'callback' => 'social_media_ajax_callback',
        'wrapper' => 'names-fieldset-wrapper',
      ],
    ];
  }

  $form['global_fieldset']['actions'] = [
    '#type' => 'actions',
  ];
  $form['global_fieldset']['actions']['add_site'] = [
    '#type' => 'submit',
    '#value' => t('Add Site'),
    '#limit_validation_errors' => [],
    '#submit' => ['social_media_add_one_site'],
    '#ajax' => [
      'callback' => 'social_media_ajax_callback',
      'wrapper' => 'names-fieldset-wrapper',
    ],
  ];

  $form['#submit'][] = 'social_media_form_submit';

  return $form;
}

function social_media_form_submit(array &$form, FormStateInterface $form_state) {
  $values = $form_state->getValues();
  $global_fieldset = $values['global_fieldset'];
  $social_media_settings = Drupal::service('config.factory')
    ->getEditable('social_media.settings');

  $social_media_settings->set('global_fieldset', array_values($global_fieldset['inputs']))
    ->save();
}

/**
 * Callback for both ajax-enabled buttons.
 *
 * Selects and returns the fieldset with the names in it.
 */
function social_media_ajax_callback(array &$form, FormStateInterface $form_state) {
  return $form['global_fieldset'];
}

/**
 * Form Validation
 */
function social_media_validate_link_field($element, &$form_state, $form) {
  if (!filter_var($element['#value'], FILTER_VALIDATE_URL)) {
    $form_state->setError($element, t('Please enter a valid Website URL'));
  }
}

/**
 * Submit handler for the "add-one-site" button.
 *
 * Increments the max counter and causes a rebuild.
 */
function social_media_add_one_site(array &$form, FormStateInterface $form_state) {
  $name_field = $form_state->get('count');
  $add_button = $name_field + 1;
  $form_state->set('count', $add_button);
  $form_state->setRebuild();
}

function social_media_remove_one_site(array &$form, FormStateInterface $form_state) {
  $trigger = $form_state->getTriggeringElement();
  $indexToRemove = $trigger['#name'];
  $indexToRemove = preg_replace('~\D~', '', $indexToRemove);

  $global_fieldset = $form['global_fieldset'];
  unset($global_fieldset['inputs'][$indexToRemove]);

  $social_media_settings = Drupal::service('config.factory')
    ->getEditable('social_media.settings');

  $removed_fields = $form_state->get('removed_fields');
  $removed_fields[] = $indexToRemove;
  $form_state->set('removed_fields', $removed_fields);

  $form_state->setRebuild();

  $social_media_settings->clear("global_fieldset.$indexToRemove");
  $rearranged_index = array_values($social_media_settings->get('global_fieldset'));
  $social_media_settings->set('global_fieldset', $rearranged_index)->save();
}
